{"version":3,"file":"static/js/817.84305d92.chunk.js","mappings":"iNAmBIA,EAAS,eAACC,EAAD,uDAAQ,GAAR,OACXC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACC,EAAIC,GAWvD,OARED,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,MAGP,K,uFCuEL,EA7FoB,WAClB,OAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,EAAYf,IACZgB,EAAYhB,IACZiB,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,SAC/CC,GAAaH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMG,KAAKD,cAC7CE,EAAY,SAAAC,GAChB,MAAwBA,EAAMC,cAAtBhB,EAAR,EAAQA,KAAMiB,EAAd,EAAcA,MACd,OAAQjB,GACN,IAAK,OACHC,EAAQgB,GACR,MAEF,IAAK,SACHd,EAAUc,GACV,MAEF,QACE,SAiBAC,EAAQ,WACZjB,EAAQ,IACRE,EAAU,KAGZ,OACE,yBACGS,IACC,SAACO,EAAA,GAAD,WACE,iBAAMC,SAtBI,SAAAL,GAKhB,GAJAA,EAAMM,iBACYb,EAASc,MACzB,SAAAC,GAAO,OAAIA,EAAQvB,KAAKwB,gBAAkBxB,EAAKwB,iBAI/C,OADAC,IAAAA,OAAAA,QAAA,UAA2BzB,EAA3B,2BACOQ,EAEPF,GAASoB,EAAAA,EAAAA,IAAW,CAAE1B,KAAAA,EAAME,OAAAA,KAE9BgB,KAWiCS,OAAO,SAAlC,UACE,UAACC,EAAA,EAAD,CACEC,GAAI,CACFC,SAAU,IACVC,GAAI,OACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,QAAS,OACTC,cAAe,SACfC,IAAK,GATT,WAYE,SAACC,EAAA,EAAD,CACEC,KAAK,OACLvC,KAAK,OACLiB,MAAOjB,EACPwC,SAAU1B,EACVnB,GAAIS,EACJqC,YAAY,WACZC,MAAM,UAER,SAACJ,EAAA,EAAD,CACEC,KAAK,MACLvC,KAAK,SACLiB,MAAOf,EACPsC,SAAU1B,EACVnB,GAAIU,EACJoC,YAAY,qBACZC,MAAM,kBAER,SAACC,EAAA,EAAD,CACEJ,KAAK,SACLV,GAAI,CACFe,GAAI,GAHR","sources":["../node_modules/nanoid/index.browser.js","components/ContactForm/ContactForm.jsx"],"sourcesContent":["import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport Notiflix from 'notiflix';\nimport { addContact } from '../../redux/contactSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CssVarsProvider } from '@mui/joy/styles';\nimport Sheet from '@mui/joy/Sheet';\nimport TextField from '@mui/joy/TextField';\nimport Button from '@mui/joy/Button';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const nameInpId = nanoid();\n  const numbInpId = nanoid();\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  const changeInp = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const submitInp = event => {\n    event.preventDefault();\n    const isContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (isContact) {\n      Notiflix.Notify.failure(`${name} is already in contact`);\n      return contacts;\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      {isLoggedIn && (\n        <CssVarsProvider>\n          <form onSubmit={submitInp} action=\"submit\">\n            <Sheet\n              sx={{\n                maxWidth: 400,\n                mx: 'auto', // margin left & right\n                my: 4, // margin top & botom\n                py: 3, // padding top & bottom\n                px: 2, // padding left & right\n                display: 'flex',\n                flexDirection: 'column',\n                gap: 2,\n              }}\n            >\n              <TextField\n                type=\"text\"\n                name=\"name\"\n                value={name}\n                onChange={changeInp}\n                id={nameInpId}\n                placeholder=\"John Doe\"\n                label=\"Name\"\n              />\n              <TextField\n                type=\"tel\"\n                name=\"number\"\n                value={number}\n                onChange={changeInp}\n                id={numbInpId}\n                placeholder=\"+38(000)-000-00-00\"\n                label=\"Phone number\"\n              />\n              <Button\n                type=\"submit\"\n                sx={{\n                  mt: 1, // margin top\n                }}\n              >\n                Add contact\n              </Button>\n            </Sheet>\n          </form>\n        </CssVarsProvider>\n      )}\n    </div>\n  );\n};\n\nexport default ContactForm;\n"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","useState","name","setName","number","setNumber","nameInpId","numbInpId","dispatch","useDispatch","contacts","useSelector","state","items","isLoggedIn","auth","changeInp","event","currentTarget","value","reset","CssVarsProvider","onSubmit","preventDefault","find","contact","toLowerCase","Notiflix","addContact","action","Sheet","sx","maxWidth","mx","my","py","px","display","flexDirection","gap","TextField","type","onChange","placeholder","label","Button","mt"],"sourceRoot":""}